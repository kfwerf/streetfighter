// Generated by CoffeeScript 1.7.1

/**
 * 
 * @author Kenneth van der Werf
 * @class moves
 * @package abstract/movement/moves
 * @description The base class from which actors are derived.
 * --
 * @param  {Class} createjs Framework for canvas game operations
 * @param  {Class} radio    Event emitter and receiver system
 * @return {Class}          Moves list
 */

(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['createjs', 'radio', 'modules/abstract/game/game', 'modules/abstract/actors/fighter', 'modules/abstract/stage/fighterstage'], function(createjs, radio, Game, Fighter, FighterStage) {
    var FighterGame;
    return FighterGame = (function(_super) {
      __extends(FighterGame, _super);

      function FighterGame() {
        createjs.Ticker.addEventListener('tick', this.onUpdate.bind(this));
        this.objStage = new FighterStage('streetfighterGame');
        this.objFighter = new Fighter;
        this.objStage.addFighter(this.objFighter);
      }

      FighterGame.prototype.onUpdate = function() {
        var fnActions, objActions;
        this.objStage.update();
        fnActions = this.objFighter.getMoves().current().action;
        objActions = typeof fnActions === 'function' ? fnActions.call(this) : {};
        if (objActions.x) {
          this.objFighter.objContainer.x += objActions.x;
          return this.objFighter.setAnimation('MOVE_FORWARD');
        }
      };

      return FighterGame;

    })(Game);
  });

}).call(this);
